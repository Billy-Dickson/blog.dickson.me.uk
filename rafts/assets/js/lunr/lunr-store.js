var store = [{
        "title": "Working out your heart rate zones",
        "excerpt":"Heart Rate Zones   To calculate your heart rate zones you will need two numbers, and basic math skills:      Your resting heart rate   Your maximum heart rate   Resting heart rate   Measuring your resting heart rate   The best time to take your pulse is before you get up in the morning. To get an accurate resting heart rate, take a readings every morning for 3 mornings and divide by 3 to give you an average. You will of course need a watch with a second hand to accomplish this.   Also, as my better looking half just pointed out, you can also use your mobile phone, most of which come with a clock with the ability to measure time.   Your heart rate is the number of times your heart beats per minute (bpm). A normal heart rate is between 60 and 100 bpm while you’re resting.      Low resting heart rate (bradycardia)   A low heart rate is classified as a heart rate less than 60 bpm. The medical term for a heart rate of around or less than this is bradycardia.   For some people such as athletes, bradycardia doesn’t pose a health risk. But if you have a low heart rate and are experiencing symptoms like fainting, fatigue and dizziness then you should make an appointment with your GP.   Working out you maximum heart rate   The Karvonen formula is one of the bests that can be used to define your heart rate zones and anaerobic threshold. It is based on the heart rate reserve, so it takes into account both your resting heart rate and maximum heart rate. Therefore it gives a much better result than the formulas that use only the maximum heart rate.   Calculating your heart rate zones using the Karvonen formula is very easy and it only takes a few minutes. To use this formula you need to know your resting and maximum heart rates.   After the calculation you will have your heart rate zones and anaerobic threshold that you can apply to your training — the exact meaning and application of the zones and threshold varies with every training plan.      The bottom line: No matter what type of runner you are–beginner, intermediate, or advanced–a heart-rate monitor will help you train more effectively. We’ll show you how. For years, everyone (including us) has been telling you that the best way to find your maximum heart rate (MHR) is to subtract your age from 220. Sorry about that. Turns out that’s not the most reliable method, at least not for healthy, fit individuals like the readers of Runner’s World. For most of you, two newer formulas will prove far more accurate:    (Formula A) MHR = 208 - (0.7 × age)   (Formula B) MHR = 205 - (.5 x your age)      A small group of Runner’s World staffers recently tested these two formulas, and reached the following conclusions. Both seem to work almost equally well for runners under The HUNT formula (men and women who are active): 211 - (0.64 x age). For runners over 40, formula (B) appears to be more accurate. We now believe that (B) is the single best formula for predicting maximum heart rate, and we’re adopting it as our Runner’s World standard.    Below is a table of Maximum Heart Rate’s using (Formula A) and (Formula B) by age, please feel free to use it if you don’t currently know your Maximum Heart Rate.   Age         (Formula A)         (Formula B) 20 years    MHR = 194 (BPM)     HMR = 195 (BPM) 25 years    MHR = 190 (BPM)     MHR = 192 (BPM) 30 years    MHR = 187 (BPM)     MHR = 190 (BPM) 35 years    MHR = 183 (BPM)     MHR = 187 (BPM) 40 years    MHR = 180 (BPM)     MHR = 185 (BPM) 45 years    MHR = 176 (BPM)     MHR = 182 (BPM) 50 years    MHR = 173 (BPM)     MHR = 180 (BPM) 55 years    MHR = 169 (BPM)     MHR = 177 (BPM) 60 years    MHR = 166 (BPM)     MHR = 175 (BPM) 65 years    MHR = 162 (BPM)     MHR = 172 (BPM) 70 years    MHR = 159 (BPM)     MHR = 167 (BPM)   Formula B in extremely accurate at 177 BPM).   As you can see from my Garmin Connect account, which shows an average of 176 (BPM) over a year, see graphic below.   If you have a garmin connect account, you can find this information under Reports –&gt; Maximum Heart Rate.      Putting It All Together   Using your resting heart rate and your maximum heart rate, you can work out your heart rate zones using heart rate reserve and the karvonen heart formula below.   Alternatively, you can goto the website below, plug in your resting heart rate and your maximum heart rate, and it will work it out for you!   Kavonen Heart Rate Calculator   Heart Rate Reserve   The Karvonen formula uses the heart rate reserve — this is a number, the size of the range between your resting heart rate and maximum heart rate. To calculate it all you need to do is to subtract the resting heart rate from the maximum heart rate.       HRreserve = HRmax - HRresting   You need to calculate this number as it is used to calculate the heart rate zones.   Target Heart Rate   To calculate the heart rate zones all you need to do is to add your resting heart rate to a certain percentage the heart rate reserve. This is the formula:       HRtarget = HRreserve x intensity% + HRresting   The intensity number is defined by the Karvonen Formula.   Karvonen Heart Rate Zones   The Karvonen formula defines the following five zones, using two numbers two define each zone — the lower and the higher end of it:       Zone1: 50% – 60%     Zone2: 60% – 70%     Zone3: 70% – 80%     Zone4: 80% – 90%     Zone5: 90% – 100%   The first three zones are aerobic, the last two are anaerobic. Your anaerobic threshold is around the 80% intensity.   After you apply these intensity numbers to the target heart rate formula you will have your heart rate zones.   Example   I have measured my resting heart rate a few months ago. so I’ll use those numbers to show you an example, I’ll be using (Formula B) as it’s the most accurate for my age (55). Don’t forget that everyone has different resting and maximum heart rates, so use your own resting heart rate and maximum heart rate when doing the calculations!       Resting heart rate - 47     Maximum heart rate - 177   Calculating the heart rate reserve:       HRreserve = 177 - 47 = 130   Calculating the zones:       130 x 50%  + 47  = 67  + 47 = 114     130 x 60%  + 47  = 78  + 47 = 125         130 x 70%  + 47  = 91  + 47 = 138     130 x 80%  + 47  = 104 + 47 = 151     130 x 90%  + 47  = 117 + 47 = 164     130 x 100% + 47  = 130 + 47 = 177   All I had to do is to apply the heart rate reserve, the intensity and the resting heart rate to the formula. The only number that changes is the intensity.   And now the heart rate zones can be defined:       Zone1: 114-125     Zone2: 125-138     Zone3: 138-151     Zone4: 151-164     Zone5: 164-177   Workout as a percentage of MHR       Easy run and long run 65-75%     Tempo run 87-92%     Interval repeats 95-100%   Race Distance Heart Rate   Bare in mind that these are only approximations, your heart rate will vary with because of lack of sleep, dehydration and over training alsos external factors such as weather (sunny or freezing conditions).   So although heart rate is good to know and can be helpful to you while your running, my best advise to you, is to just enjoy the race and not to fixate too much on it (use it as a guide).       5-K             95-97%     10-K            92-94%     Half-marathon   85-88%     Marathon        80-85%      Fern Oliner had been a runner for more than 25 years when she experienced a breakthrough in her performance. It happened at age 59, during a challenging half-marathon.    References      How To Use A Heart Rate Monitor   Target Rate Heart Rates Charts   How to Calculate Your Target Heart Rate   The Karvonen Formula   Karvonen Heart Rate Zones Calculator   Polar Maximum Heart Rate Calculator   Understanding your Maximum Heart Rate  ","categories": ["Running"],
        "tags": [],
        "url": "/running/2022/07/09/Training-to-heart-rate.html",
        "teaser": null
      },{
        "title": "Removing exif data using Linux exiftool",
        "excerpt":"How to remove exif data from photos   Here’s a handy linux command line tool that rcan remove all exif data from your photographs. This one I use to remove the exif data from my photographs before I publish them to my website.   These instructions are aimed at people who use linux as their daily driver (like myself), if you use a debian based distribution, then all the instructions below will apply.   If you use a distribution not based on debian, then the install syntax will vary accordingly.   Removing EXIF is a smart idea, particularly if you’re especially privacy-conscious however, your biggest concern is most likely the geolocation information.   Install the appication   sudo apt install exiftool   Show the metadata   exiftool photo.jpg   Show metedata for all *.jpg files. Note: The extension is case sensitive   exiftool -ext jpg .   Same as above, but include sub directories   exiftool -r -ext jpg .   Remove all metadata   exiftool -all= -overwrite_original photo.jpg   Remove all metadata of all *.jpg files in the current directory   exiftool -all= -overwrite_original -ext jpg .   Does the same as above, but includes subdirectories   exiftool -all= -r -overwrite_original -ext jpg .   Remove all GPS metadata of *.jpg files in the current directory   exiftool -gps:all= *.jpg   References      Linux Nightly online Linux Magazine.   Removing exif data using other operating systems  ","categories": ["Computing","Linux","Homelab"],
        "tags": [],
        "url": "/computing/linux/homelab/2022/08/10/Linux-Command-line-tools.html",
        "teaser": null
      },{
        "title": "Working with Jekyll",
        "excerpt":"You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.   Jekyll requires blog post files to be named according to the following format:   YEAR-MONTH-DAY-title.MARKUP   Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and MARKUP is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.   Jekyll also offers powerful support for code snippets:   def print_hi(name)   puts \"Hi, #{name}\" end print_hi('Tom')  =&gt; prints 'Hi, Tom' to STDOUT  Check out the Jekyll docs for more info on how to get the most out of Jekyll. File all bugs/feature requests at Jekyll’s GitHub repo. If you have questions, you can ask them on Jekyll Talk.   This is more of a reminder for me, but feel free to use them if it’s helpful. I’m currently in the process of converting my old Wordpress site to Jekyll.   Useful Markdown and Jekyll Links      Quick-Start Guide for Minimal Mistakes my current theme.   Handy Minimum Mistakes Cheatsheet that should help me as I’m updating my blog.   Wordpress addon called Wordpress Jekyll Explorer that I’m going to try and use to export my old Wordpress Site to a Jekyll.  Here is a helpful links that describe a number of options for converting WordPress to Jekyll. I’ll update these link as then try them, at the moment they are a reminder to myself.   Markdown Cheatsheet for Github and Jekyll -Install instructions for Algolia search integration for my Jekyll Website.   Jekyll-Algolia Algolia Community Website for Jekyll -Personal Website of Peter Wills where I found some handy tutorials and tips on using Minimal Mistakes   Personal Website of Renato Golia where I found some handy tutorials and tips on using Minimal Mistakes   Shanto Roy’s Minimal Mistakes Website, here I found some good instuctions on setting up google analytics.  ","categories": ["jekyll","Computing"],
        "tags": [],
        "url": "/jekyll/computing/2022/08/17/Working-with-jekyll.html",
        "teaser": null
      },{
        "title": "Markdown Cheatsheet",
        "excerpt":"This page is intended as a quick reference to help me while I’m writing my blogs, for more complete information see John Gruber’s original specification.   Phrase emphasis   *italic* and **bold**   italic and bold   Links   Inline (titles are options):   Some [linked to](https://example.com/)   Some linked to   Reference-style labels (titles are optional):   An [example][id].   Then, anywhere else in the same block, define the link:   [id]: https://example.com/ \"Title\"   An example]   :bulb: You can use whatever you want to in place of “id”. Just ensure that they match.   Formatting Links   To emphasize links, add asterisks before and after the brackets and parentheses. To denote links as code, add backticks in the brackets.   I love supporting the **[EFF](https://eff.org)**.\\ This is the *[Markdown Guide](https://www.markdownguide.org)*.\\ See the section on [`code`](#code).   The rendered output looks like this   I love supporting the EFF.  This is the Markdown Guide.  See the section on code.   Superscript and Subscript   Bare in mind that Markdown doesn’t support Superscript or Subscript natively, this is an html workaround. You might get an error message depending on the editor you are using, I’m using Visual Studio Code on Pop!_OS which has been my daily driver for a year or so.   Superscript   E=MC&lt;sup&gt;2&lt;/sup&gt;   E=MC2   Subscript   Plants need CO&lt;sub&gt;2&lt;/sub&gt;   Plants need CO2   Images   Inline (titles are optional):   ![alt text](/assets/images/tux.png \"Title\")      Reference-style:   ![alt text][id]   [id]: /assets/images/tux.png \"Title\"      Headings   ## Heading 2  ### Heading 3   Heading 2   The standard Lorem Ipsum passage, used since the 1500s “Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.”   Heading 3   The standard Lorem Ipsum passage, used since the 1500s “Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.”   Lists   Ordered, without paragraphs   1. Foo 2. Bar      Foo   Bar   Unordered, with paragraphs   * A list item.   With multiple paragraphs. * Bar      A list item.  With multiple paragraphs.   Bar   Nested   * Abacus   * absolute * Bananas     1. bitter     2. bupkis     3. burper * Cunning      Abacus            absolute           Bananas            bitter       bupkis       burper           Cunning   Blockquotes   &gt; Email-style angle brackets are used for blockquotes. &gt;&gt; You can also nest them. &gt;&gt; &gt; * You can quote a list. &gt; * Etc.  &gt; To break the nested blockquote, add a space between lines.  Add another line to resume regular paragraph text.      Email-style angle brackets are used for blockquotes.         You can also nest them.              You can quote a list.       Etc.       Etc. To break the nested blockquote, add a space between lines.           Add another line to resume regular paragraph text.   :bulb:This site uses custom styling for blockquotes. The code provided here won’t create the same colour scheme as you are using in your own website, unless of course, your using the same theme as myself which is currently Minimal Mistakes and the contrast theme.   Extended Syntax   These elements extend the basic syntax by adding additional features. Not all Markdown applications support these elements, thankfully Jekyll does.   Symbols   Markdown doesn’t provide special syntax for symbols. However, in most cases, you can copy and paste whatever symbol you want to use into your Markdown document. For example, if you need to display Pi (π), just find the symbol on a webpage and copy and paste it into your document. The symbol should appear as expected in the rendered output.   Alternatively, if your Markdown application supports HTML, you can use the HTML entity for whatever symbol you want to use. For example, if you want to display the copyright sign (©), you can copy and paste the HTML entity for copyright (©) into your Markdown document.   Here’s a partial list of HTML entities for symbols:   Copyright (©) — &amp;copy; Registered trademark (®) — &amp;reg; Trademark (™) — &amp;trade; Euro (€) — &amp;euro; Left arrow (←) — &amp;larr; Up arrow (↑) — &amp;uarr; Right arrow (→) — &amp;rarr; Down arrow (↓) — &amp;darr; Degree (°) — &amp;#176; Pi (π) — &amp;#960;   For a complete list of available HTML entities, refer to Wikipedia’s page on HTML entities.   Tables   To add a table, use three or more hyphens to create each column’s header, and use pipes to separate each column. For compatibility, you should also add a pipe on either end of the row.   | Syntax      | Description | | ----------- | ----------- | | Header      | Title       | | Paragraph   | Text        |   The rendered output looks like this                  Syntax       Description                       Header       Title                 Paragraph       Text           Cell widths can vary, as shown below. The rendered output will look the same.   | Syntax | Description | | --- | ----------- | | Header | Title | | Paragraph | Text |   Line Breaks Within Table Cells   You can separate paragraphs within a table cell by using one or more &lt;br&gt; HTML tags.   | Syntax      | Description | | ----------- | ----------- | | Header      | Title | | Paragraph   | First paragraph. &lt;br&gt;&lt;br&gt; Second paragraph. |   The rendered output looks like this                  Syntax       Description                       Header       Title                 Paragraph       First paragraph.    Second paragraph.           Fenced Code Blocks   The basic Markdown syntax allows you to create code blocks by indenting lines by four spaces or one tab. If you find that inconvenient, try using fenced code blocks. Depending on your Markdown processor or editor, you’ll use three backticks (```) or three tildes on the lines before and after the code block. The best part? You don’t have to indent any lines!   It’s also good practice, to say what the code type is at the start of the block.    ~~~json  {   \"firstName\": \"John\",   \"lastName\": \"Smith\",   \"age\": 25   }  ~~~   The rendered output looks like this   {   \"firstName\": \"John\",   \"lastName\": \"Smith\",   \"age\": 25 }   Table of Contents  Some Markdown applications like Markdeep can automatically generate a table of contents (also referred to as a toc) from your headings, but this isn’t a feature provided by all Markdown applications. However, if your Markdown application supports heading IDs, you can create a table of contents for your Markdown file using a list and some links.   #### Table of Contents  * [Underline](#underline) * [Indent](#indent) * [Center](#center) * [Color](#color)   The rendered output looks like this:   Table of Contents      Underline   Indent   Center   Color   Code spans   `&lt;code&gt;` spans are delimited by backticks. You can include literal backticks like `` `this` ``.   &lt;code&gt; spans are delimited by backticks. You can include literal backticks like `this`.   Horizontal rules   Three or more dashes   ---   Horizontal rules Three or more dashes     Manual line breaks   End a line with two or more spaces   Roses are red,   Violets are blue.   Roses are red,  Violets are blue.   Text colors and fonts   The following might throw up a few errors in your Markup editor depending on what you’re useing, it’s not stickly speaking pure Markup it contains html elements. But it will render correctly and look fine, as you can see below.   In his beard lived three &lt;span style=\"color:red\"&gt;cardinals&lt;/span&gt;. In his beard lived three cardinals.   In his beard lived three cardinals. In his beard lived three cardinals.   I am in &lt;span style=\"font-family:Papyrus; font-size:4em;\"&gt;LOVE!&lt;/span&gt;   I am in LOVE!   Videos   If your Markdown application supports HTML, you should be able to embed a video in your Markdown file by copying and pasting the HTML code provided by a video website like YouTube or Vimeo. If your Markdown application doesn’t support HTML, you can’t embed a video, but you can come close by adding an image and a link to the video. You could do this with practically any video on any video service.   Since YouTube makes this easy, we’ll use them as an example. Take this video, for instance: https://youtu.be/KMixoNTvtrA. The last part of the URL (KMixoNTvtrA) is the ID of the video. We can take that ID and put it in the following template   [![Image alt text](https://img.youtube.com/vi/KMixoNTvtrA/0.jpg)](https://www.youtube.com/watch?v=KMixoNTvtrA)   YouTube automatically generates an image for every video (https://img.youtube.com/vi/KMixoNTvtrA/0.jpg), so we can use that and link the image to the video on YouTube. After we replace the image alt text and add the ID of the video, our example looks like this:   [![I Wish I was a Girl - Wasted Youth](https://img.youtube.com/vi/IQ5yU0eQzig/0.jpg)](https://youtu.be/IQ5yU0eQzig   The rendered output looks like this      References      The Markdown Reference is here   The Jekyll-Markdown-Cheat-Sheet   The standard Lorem Ipsum passage and some history surrounding it  ","categories": ["jekyll","Computing"],
        "tags": [],
        "url": "/jekyll/computing/2022/08/19/Markdown-Cheat-Sheet.html",
        "teaser": null
      }]
